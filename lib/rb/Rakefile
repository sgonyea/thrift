#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#

require 'rubygems'
require 'bundler/setup'
require 'bundler/gem_tasks'

require 'rspec'
require 'rspec/core'
require 'rspec/core/rake_task'

def thrift_path
  @thrift ||= begin
    thrift = ENV['THRIFT'] || '../../compiler/cpp/thrift'

    unless File.exist?(thrift)
      puts "Warning: The THRIFT binary does not appear to be compiled. Trying your $PATH."

      thrift = `which thrift`.strip
      raise "A thrift binary cannot be found on your $PATH. Aborting." if thrift.empty?
    end

    thrift
  end
end

task :default => [:spec]

desc 'Run all specs'
task :spec => %w[build:thrift  gen-rb  spec:spec]

namespace :spec do
  RSpec::Core::RakeTask.new(:spec) do |spec|
    spec.pattern    = "spec/**/*_spec.rb"
    spec.verbose    = true
    spec.rspec_opts = ['--color', '--format progress']
  end

  RSpec::Core::RakeTask.new(:rcov) do |t|
    t.rspec_opts = ['--color']
    t.rcov = true
    t.rcov_opts = ['--exclude', '^spec,/gems/']
  end
end

namespace :build do
  task :thrift => %w[build:extconf  build:clean  build:make]

  task :extconf do
    sh 'cd ext && ruby extconf.rb'
  end

  task :make do
    sh 'cd ext && make'
  end

  task :clean do
    sh 'cd ext && make clean'
  end
end

desc 'Compile the .thrift files for the specs'
task :'gen-rb' => %w[gen-rb:spec  gen-rb:benchmark  gen-rb:debug_proto]

namespace :'gen-rb' do
  task :spec do
    dir = Bundler.root.join('spec')
    sh thrift_path, '--gen', 'rb', '-out', dir.join('support').to_s, dir.join('thrift/ThriftSpec.thrift').to_s
  end

  task :benchmark do
    dir = Bundler.root.join('benchmark')
    sh thrift_path, '--gen', 'rb', '-out', dir.to_s, dir.join('Benchmark.thrift').to_s
  end
  
  task :debug_proto do
    sh "mkdir", "-p", "debug_proto_test"
    sh thrift_path, '--gen', 'rb', "-out", "debug_proto_test", "../../test/DebugProtoTest.thrift"
  end
end

desc 'Run the compiler tests (requires full thrift checkout)'
task :test do
  # ensure this is a full thrift checkout and not a tarball of the ruby libs
  cmd = 'head -1 ../../README 2>/dev/null | grep Thrift >/dev/null 2>/dev/null'
  system(cmd) or fail "rake test requires a full thrift checkout"
  sh 'make', '-C', File.dirname(__FILE__) + "/../../test/rb", "check"
end

desc 'Run benchmarking of NonblockingServer'
task :benchmark do
  ruby 'benchmark/benchmark.rb'
end
